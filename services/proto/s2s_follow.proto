syntax = "proto3";

option go_package = "services/proto";

import "services/proto/general.proto";

// Both handle and host should be fully-qualified for both local and non-local
// users, as they are required to build the URLs of actors, etc.
message FollowActivityUser {
  string handle = 1;
  string host = 2;
}

message FollowDetails {
  FollowActivityUser follower = 1;
  FollowActivityUser followed = 2;
}

// ReceivedFollowDetails is what the skinny server received in a raw form, and
// what is then forwarded on to the s2s follow microservice.
message ReceivedFollowDetails {
  string follower = 1;
  string followed = 2;
}

// Service for sending and receiving server-to-server follow requests.
service S2SFollow {
  rpc SendFollowActivity(FollowDetails) returns (GeneralResponse);
  rpc ReceiveFollowActivity(ReceivedFollowDetails) returns (GeneralResponse);

  rpc SendUnfollowActivity(FollowDetails) returns (GeneralResponse);
  rpc ReceiveUnfollowActivity(ReceivedFollowDetails) returns (GeneralResponse);
}
